{"version":3,"file":"static/js/16.a3d69fa2.chunk.js","mappings":"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","sources":["../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/_sha2.ts","../node_modules/@noble/hashes/src/_u64.ts","../node_modules/@noble/hashes/src/crypto.ts","../node_modules/@noble/hashes/src/hmac.ts","../node_modules/@noble/hashes/src/pbkdf2.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/hashes/src/sha512.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@scure/base/lib/index.js","../node_modules/@scure/bip39/index.js","../node_modules/@scure/bip39/wordlists/english.js","../node_modules/@noble/curves/src/_shortw_utils.ts","../node_modules/@noble/curves/src/abstract/curve.ts","../node_modules/@noble/curves/src/abstract/hash-to-curve.ts","../node_modules/@noble/curves/src/abstract/modular.ts","../node_modules/@noble/curves/src/abstract/utils.ts","../node_modules/@noble/curves/src/abstract/weierstrass.ts","../node_modules/@noble/curves/src/secp256k1.ts","../node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/@scure/base/lib/esm/index.js","../node_modules/comlink/src/comlink.ts","../node_modules/nostr-tools/lib/esm/nostr.mjs","../node_modules/nostr-tools/node_modules/@scure/bip32/index.ts"],"sourcesContent":["export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Currently completly inconsistent naming:\n// - readable: add, mul, sqr, sqrt, inv, div, pow, eq, sub\n// - unreadable mess: addition, multiply, square, squareRoot, inversion, divide, power, equals, subtract\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n\n// We accept hex strings besides Uint8Array for simplicity\nexport type Hex = Uint8Array | string;\n// Very few implementations accept numbers, we do it to ease learning curve\nexport type PrivKey = Hex | bigint;\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// Caching slows it down 2-3x\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  if (hex.length % 2) throw new Error('hex string is invalid: unpadded ' + hex.length);\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// Big Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport const numberToBytesBE = (n: bigint, len: number) =>\n  hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n: bigint, len: number) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n: bigint) => hexToBytes(numberToHexUnpadded(n));\n\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrs.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n// Bit operations\n\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n: bigint, pos: number) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n: bigint, pos: number, value: boolean) =>\n  n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): SignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => SignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number) {\n      return new Signature(this.r, this.s, recovery);\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): Signature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery); // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash (not message: you need to hash it by yourself).\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param opts `lowS, extraEntropy, prehash`\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): Signature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = ut.createHmacDrbg<Signature>(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n","/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = {\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n};\n\nconst isoMap = htf.isogenyMap(\n  Fp,\n  [\n    // xNum\n    [\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n      '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n      '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n      '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n      '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n      '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n      '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n      '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n      '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n      '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n      '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n      '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n  ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n);\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n  A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n  B: BigInt('1771'),\n  Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(\n  secp256k1.ProjectivePoint,\n  (scalars: bigint[]) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n  },\n  {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n  }\n);\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\n\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\n\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport type { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\nexport const finalizer = Symbol(\"Comlink.finalizer\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nfunction isAllowedOrigin(\n  allowedOrigins: (string | RegExp)[],\n  origin: string\n): boolean {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function expose(\n  obj: any,\n  ep: Endpoint = globalThis as any,\n  allowedOrigins: (string | RegExp)[] = [\"*\"]\n) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n          if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n            obj[finalizer]();\n          }\n        }\n      })\n      .catch((error) => {\n        // Send Serialization Error To Caller\n        const [wireValue, transferables] = toWireValue({\n          value: new TypeError(\"Unserializable return value\"),\n          [throwMarker]: 0,\n        });\n        ep.postMessage({ ...wireValue, id }, transferables);\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction releaseEndpoint(ep: Endpoint) {\n  return requestResponseMessage(ep, {\n    type: MessageType.RELEASE,\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\n\ninterface FinalizationRegistry<T> {\n  new (cb: (heldValue: T) => void): FinalizationRegistry<T>;\n  register(\n    weakItem: object,\n    heldValue: T,\n    unregisterToken?: object | undefined\n  ): void;\n  unregister(unregisterToken: object): void;\n}\ndeclare var FinalizationRegistry: FinalizationRegistry<Endpoint>;\n\nconst proxyCounter = new WeakMap<Endpoint, number>();\nconst proxyFinalizers =\n  \"FinalizationRegistry\" in globalThis &&\n  new FinalizationRegistry((ep: Endpoint) => {\n    const newCount = (proxyCounter.get(ep) || 0) - 1;\n    proxyCounter.set(ep, newCount);\n    if (newCount === 0) {\n      releaseEndpoint(ep);\n    }\n  });\n\nfunction registerProxy(proxy: object, ep: Endpoint) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\n\nfunction unregisterProxy(proxy: object) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  registerProxy(proxy, ep);\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T extends {}>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = globalThis,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// keys.ts\nimport { schnorr } from \"@noble/curves/secp256k1\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nfunction generatePrivateKey() {\n  return bytesToHex(schnorr.utils.randomPrivateKey());\n}\nfunction getPublicKey(privateKey) {\n  return bytesToHex(schnorr.getPublicKey(privateKey));\n}\n\n// event.ts\nimport { schnorr as schnorr2 } from \"@noble/curves/secp256k1\";\nimport { sha256 } from \"@noble/hashes/sha256\";\nimport { bytesToHex as bytesToHex2 } from \"@noble/hashes/utils\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  normalizeURL: () => normalizeURL,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction normalizeURL(url) {\n  let p = new URL(url);\n  p.pathname = p.pathname.replace(/\\/+/g, \"/\");\n  if (p.pathname.endsWith(\"/\"))\n    p.pathname = p.pathname.slice(0, -1);\n  if (p.port === \"80\" && p.protocol === \"ws:\" || p.port === \"443\" && p.protocol === \"wss:\")\n    p.port = \"\";\n  p.searchParams.sort();\n  p.hash = \"\";\n  return p.toString();\n}\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at < sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at >= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at > event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at < event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at > sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at <= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at < event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at > event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\n\n// event.ts\nvar Kind = /* @__PURE__ */ ((Kind3) => {\n  Kind3[Kind3[\"Metadata\"] = 0] = \"Metadata\";\n  Kind3[Kind3[\"Text\"] = 1] = \"Text\";\n  Kind3[Kind3[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  Kind3[Kind3[\"Contacts\"] = 3] = \"Contacts\";\n  Kind3[Kind3[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  Kind3[Kind3[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  Kind3[Kind3[\"Repost\"] = 6] = \"Repost\";\n  Kind3[Kind3[\"Reaction\"] = 7] = \"Reaction\";\n  Kind3[Kind3[\"BadgeAward\"] = 8] = \"BadgeAward\";\n  Kind3[Kind3[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  Kind3[Kind3[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  Kind3[Kind3[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  Kind3[Kind3[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  Kind3[Kind3[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  Kind3[Kind3[\"Blank\"] = 255] = \"Blank\";\n  Kind3[Kind3[\"Report\"] = 1984] = \"Report\";\n  Kind3[Kind3[\"ZapRequest\"] = 9734] = \"ZapRequest\";\n  Kind3[Kind3[\"Zap\"] = 9735] = \"Zap\";\n  Kind3[Kind3[\"RelayList\"] = 10002] = \"RelayList\";\n  Kind3[Kind3[\"ClientAuth\"] = 22242] = \"ClientAuth\";\n  Kind3[Kind3[\"BadgeDefinition\"] = 30008] = \"BadgeDefinition\";\n  Kind3[Kind3[\"ProfileBadge\"] = 30009] = \"ProfileBadge\";\n  Kind3[Kind3[\"Article\"] = 30023] = \"Article\";\n  return Kind3;\n})(Kind || {});\nfunction getBlankEvent(kind = 255 /* Blank */) {\n  return {\n    kind,\n    content: \"\",\n    tags: [],\n    created_at: 0\n  };\n}\nfunction finishEvent(t, privateKey) {\n  let event = t;\n  event.pubkey = getPublicKey(privateKey);\n  event.id = getEventHash(event);\n  event.sig = getSignature(event, privateKey);\n  return event;\n}\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([\n    0,\n    evt.pubkey,\n    evt.created_at,\n    evt.kind,\n    evt.tags,\n    evt.content\n  ]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return bytesToHex2(eventHash);\n}\nvar isRecord = (obj) => obj instanceof Object;\nfunction validateEvent(event) {\n  if (!isRecord(event))\n    return false;\n  if (typeof event.kind !== \"number\")\n    return false;\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i = 0; i < event.tags.length; i++) {\n    let tag = event.tags[i];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction verifySignature(event) {\n  try {\n    return schnorr2.verify(event.sig, getEventHash(event), event.pubkey);\n  } catch (err) {\n    return false;\n  }\n}\nfunction signEvent(event, key) {\n  console.warn(\n    \"nostr-tools: `signEvent` is deprecated and will be removed or changed in the future. Please use `getSignature` instead.\"\n  );\n  return getSignature(event, key);\n}\nfunction getSignature(event, key) {\n  return bytesToHex2(schnorr2.sign(getEventHash(event), key));\n}\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1) {\n    if (!filter.ids.some((prefix) => event.id.startsWith(prefix))) {\n      return false;\n    }\n  }\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1)\n    return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1) {\n    if (!filter.authors.some((prefix) => event.pubkey.startsWith(prefix))) {\n      return false;\n    }\n  }\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(\n        ([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1\n      ))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at >= filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i = 0; i < filters.length; i++) {\n    if (matchFilter(filters[i], event))\n      return true;\n  }\n  return false;\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  getSubscriptionId: () => getSubscriptionId,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction getSubscriptionId(json) {\n  let idx = json.slice(0, 22).indexOf(`\"EVENT\"`);\n  if (idx === -1)\n    return null;\n  let pstart = json.slice(idx + 7 + 1).indexOf(`\"`);\n  if (pstart === -1)\n    return null;\n  let start = idx + 7 + 1 + pstart;\n  let pend = json.slice(start + 1, 80).indexOf(`\"`);\n  if (pend === -1)\n    return null;\n  let end = start + 1 + pend;\n  return json.slice(start + 1, end);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// relay.ts\nvar newListeners = () => ({\n  connect: [],\n  disconnect: [],\n  error: [],\n  notice: [],\n  auth: []\n});\nfunction relayInit(url, options = {}) {\n  let { listTimeout = 3e3, getTimeout = 3e3, countTimeout = 3e3 } = options;\n  var ws;\n  var openSubs = {};\n  var listeners = newListeners();\n  var subListeners = {};\n  var pubListeners = {};\n  var connectionPromise;\n  async function connectRelay() {\n    if (connectionPromise)\n      return connectionPromise;\n    connectionPromise = new Promise((resolve, reject) => {\n      try {\n        ws = new WebSocket(url);\n      } catch (err) {\n        reject(err);\n      }\n      ws.onopen = () => {\n        listeners.connect.forEach((cb) => cb());\n        resolve();\n      };\n      ws.onerror = () => {\n        connectionPromise = void 0;\n        listeners.error.forEach((cb) => cb());\n        reject();\n      };\n      ws.onclose = async () => {\n        connectionPromise = void 0;\n        listeners.disconnect.forEach((cb) => cb());\n      };\n      let incomingMessageQueue = [];\n      let handleNextInterval;\n      ws.onmessage = (e) => {\n        incomingMessageQueue.push(e.data);\n        if (!handleNextInterval) {\n          handleNextInterval = setInterval(handleNext, 0);\n        }\n      };\n      function handleNext() {\n        if (incomingMessageQueue.length === 0) {\n          clearInterval(handleNextInterval);\n          handleNextInterval = null;\n          return;\n        }\n        var json = incomingMessageQueue.shift();\n        if (!json)\n          return;\n        let subid = getSubscriptionId(json);\n        if (subid) {\n          let so = openSubs[subid];\n          if (so && so.alreadyHaveEvent && so.alreadyHaveEvent(getHex64(json, \"id\"), url)) {\n            return;\n          }\n        }\n        try {\n          let data = JSON.parse(json);\n          switch (data[0]) {\n            case \"EVENT\": {\n              let id2 = data[1];\n              let event = data[2];\n              if (validateEvent(event) && openSubs[id2] && (openSubs[id2].skipVerification || verifySignature(event)) && matchFilters(openSubs[id2].filters, event)) {\n                openSubs[id2];\n                (subListeners[id2]?.event || []).forEach((cb) => cb(event));\n              }\n              return;\n            }\n            case \"COUNT\":\n              let id = data[1];\n              let payload = data[2];\n              if (openSubs[id]) {\n                ;\n                (subListeners[id]?.count || []).forEach((cb) => cb(payload));\n              }\n              return;\n            case \"EOSE\": {\n              let id2 = data[1];\n              if (id2 in subListeners) {\n                subListeners[id2].eose.forEach((cb) => cb());\n                subListeners[id2].eose = [];\n              }\n              return;\n            }\n            case \"OK\": {\n              let id2 = data[1];\n              let ok = data[2];\n              let reason = data[3] || \"\";\n              if (id2 in pubListeners) {\n                if (ok)\n                  pubListeners[id2].ok.forEach((cb) => cb());\n                else\n                  pubListeners[id2].failed.forEach((cb) => cb(reason));\n                pubListeners[id2].ok = [];\n                pubListeners[id2].failed = [];\n              }\n              return;\n            }\n            case \"NOTICE\":\n              let notice = data[1];\n              listeners.notice.forEach((cb) => cb(notice));\n              return;\n            case \"AUTH\": {\n              let challenge = data[1];\n              listeners.auth?.forEach((cb) => cb(challenge));\n              return;\n            }\n          }\n        } catch (err) {\n          return;\n        }\n      }\n    });\n    return connectionPromise;\n  }\n  function connected() {\n    return ws?.readyState === 1;\n  }\n  async function connect() {\n    if (connected())\n      return;\n    await connectRelay();\n  }\n  async function trySend(params) {\n    let msg = JSON.stringify(params);\n    if (!connected()) {\n      await new Promise((resolve) => setTimeout(resolve, 1e3));\n      if (!connected()) {\n        return;\n      }\n    }\n    try {\n      ws.send(msg);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const sub = (filters, {\n    verb = \"REQ\",\n    skipVerification = false,\n    alreadyHaveEvent = null,\n    id = Math.random().toString().slice(2)\n  } = {}) => {\n    let subid = id;\n    openSubs[subid] = {\n      id: subid,\n      filters,\n      skipVerification,\n      alreadyHaveEvent\n    };\n    trySend([verb, subid, ...filters]);\n    return {\n      sub: (newFilters, newOpts = {}) => sub(newFilters || filters, {\n        skipVerification: newOpts.skipVerification || skipVerification,\n        alreadyHaveEvent: newOpts.alreadyHaveEvent || alreadyHaveEvent,\n        id: subid\n      }),\n      unsub: () => {\n        delete openSubs[subid];\n        delete subListeners[subid];\n        trySend([\"CLOSE\", subid]);\n      },\n      on: (type, cb) => {\n        subListeners[subid] = subListeners[subid] || {\n          event: [],\n          count: [],\n          eose: []\n        };\n        subListeners[subid][type].push(cb);\n      },\n      off: (type, cb) => {\n        let listeners2 = subListeners[subid];\n        let idx = listeners2[type].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type].splice(idx, 1);\n      }\n    };\n  };\n  function _publishEvent(event, type) {\n    if (!event.id)\n      throw new Error(`event ${event} has no id`);\n    let id = event.id;\n    trySend([type, event]);\n    return {\n      on: (type2, cb) => {\n        pubListeners[id] = pubListeners[id] || {\n          ok: [],\n          failed: []\n        };\n        pubListeners[id][type2].push(cb);\n      },\n      off: (type2, cb) => {\n        let listeners2 = pubListeners[id];\n        if (!listeners2)\n          return;\n        let idx = listeners2[type2].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type2].splice(idx, 1);\n      }\n    };\n  }\n  return {\n    url,\n    sub,\n    on: (type, cb) => {\n      listeners[type].push(cb);\n      if (type === \"connect\" && ws?.readyState === 1) {\n        ;\n        cb();\n      }\n    },\n    off: (type, cb) => {\n      let index = listeners[type].indexOf(cb);\n      if (index !== -1)\n        listeners[type].splice(index, 1);\n    },\n    list: (filters, opts) => new Promise((resolve) => {\n      let s = sub(filters, opts);\n      let events = [];\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(events);\n      }, listTimeout);\n      s.on(\"eose\", () => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(events);\n      });\n      s.on(\"event\", (event) => {\n        events.push(event);\n      });\n    }),\n    get: (filter, opts) => new Promise((resolve) => {\n      let s = sub([filter], opts);\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(null);\n      }, getTimeout);\n      s.on(\"event\", (event) => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(event);\n      });\n    }),\n    count: (filters) => new Promise((resolve) => {\n      let s = sub(filters, { ...sub, verb: \"COUNT\" });\n      let timeout = setTimeout(() => {\n        s.unsub();\n        resolve(null);\n      }, countTimeout);\n      s.on(\"count\", (event) => {\n        s.unsub();\n        clearTimeout(timeout);\n        resolve(event);\n      });\n    }),\n    publish(event) {\n      return _publishEvent(event, \"EVENT\");\n    },\n    auth(event) {\n      return _publishEvent(event, \"AUTH\");\n    },\n    connect,\n    close() {\n      listeners = newListeners();\n      subListeners = {};\n      pubListeners = {};\n      if (ws.readyState === WebSocket.OPEN) {\n        ws?.close();\n      }\n    },\n    get status() {\n      return ws?.readyState ?? 3;\n    }\n  };\n}\n\n// pool.ts\nvar SimplePool = class {\n  _conn;\n  _seenOn = {};\n  eoseSubTimeout;\n  getTimeout;\n  constructor(options = {}) {\n    this._conn = {};\n    this.eoseSubTimeout = options.eoseSubTimeout || 3400;\n    this.getTimeout = options.getTimeout || 3400;\n  }\n  close(relays) {\n    relays.forEach((url) => {\n      let relay = this._conn[normalizeURL(url)];\n      if (relay)\n        relay.close();\n    });\n  }\n  async ensureRelay(url) {\n    const nm = normalizeURL(url);\n    if (!this._conn[nm]) {\n      this._conn[nm] = relayInit(nm, {\n        getTimeout: this.getTimeout * 0.9,\n        listTimeout: this.getTimeout * 0.9\n      });\n    }\n    const relay = this._conn[nm];\n    await relay.connect();\n    return relay;\n  }\n  sub(relays, filters, opts) {\n    let _knownIds = /* @__PURE__ */ new Set();\n    let modifiedOpts = { ...opts || {} };\n    modifiedOpts.alreadyHaveEvent = (id, url) => {\n      if (opts?.alreadyHaveEvent?.(id, url)) {\n        return true;\n      }\n      let set = this._seenOn[id] || /* @__PURE__ */ new Set();\n      set.add(url);\n      this._seenOn[id] = set;\n      return _knownIds.has(id);\n    };\n    let subs = [];\n    let eventListeners = /* @__PURE__ */ new Set();\n    let eoseListeners = /* @__PURE__ */ new Set();\n    let eosesMissing = relays.length;\n    let eoseSent = false;\n    let eoseTimeout = setTimeout(() => {\n      eoseSent = true;\n      for (let cb of eoseListeners.values())\n        cb();\n    }, this.eoseSubTimeout);\n    relays.forEach(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n      } catch (err) {\n        handleEose();\n        return;\n      }\n      if (!r)\n        return;\n      let s = r.sub(filters, modifiedOpts);\n      s.on(\"event\", (event) => {\n        _knownIds.add(event.id);\n        for (let cb of eventListeners.values())\n          cb(event);\n      });\n      s.on(\"eose\", () => {\n        if (eoseSent)\n          return;\n        handleEose();\n      });\n      subs.push(s);\n      function handleEose() {\n        eosesMissing--;\n        if (eosesMissing === 0) {\n          clearTimeout(eoseTimeout);\n          for (let cb of eoseListeners.values())\n            cb();\n        }\n      }\n    });\n    let greaterSub = {\n      sub(filters2, opts2) {\n        subs.forEach((sub) => sub.sub(filters2, opts2));\n        return greaterSub;\n      },\n      unsub() {\n        subs.forEach((sub) => sub.unsub());\n      },\n      on(type, cb) {\n        if (type === \"event\") {\n          eventListeners.add(cb);\n        } else if (type === \"eose\") {\n          eoseListeners.add(cb);\n        }\n      },\n      off(type, cb) {\n        if (type === \"event\") {\n          eventListeners.delete(cb);\n        } else if (type === \"eose\")\n          eoseListeners.delete(cb);\n      }\n    };\n    return greaterSub;\n  }\n  get(relays, filter, opts) {\n    return new Promise((resolve) => {\n      let sub = this.sub(relays, [filter], opts);\n      let timeout = setTimeout(() => {\n        sub.unsub();\n        resolve(null);\n      }, this.getTimeout);\n      sub.on(\"event\", (event) => {\n        resolve(event);\n        clearTimeout(timeout);\n        sub.unsub();\n      });\n    });\n  }\n  list(relays, filters, opts) {\n    return new Promise((resolve) => {\n      let events = [];\n      let sub = this.sub(relays, filters, opts);\n      sub.on(\"event\", (event) => {\n        events.push(event);\n      });\n      sub.on(\"eose\", () => {\n        sub.unsub();\n        resolve(events);\n      });\n    });\n  }\n  publish(relays, event) {\n    const pubPromises = relays.map(async (relay) => {\n      let r;\n      try {\n        r = await this.ensureRelay(relay);\n        return r.publish(event);\n      } catch (_) {\n        return { on() {\n        }, off() {\n        } };\n      }\n    });\n    const callbackMap = /* @__PURE__ */ new Map();\n    return {\n      on(type, cb) {\n        relays.forEach(async (relay, i) => {\n          let pub = await pubPromises[i];\n          let callback = () => cb(relay);\n          callbackMap.set(cb, callback);\n          pub.on(type, callback);\n        });\n      },\n      off(type, cb) {\n        relays.forEach(async (_, i) => {\n          let callback = callbackMap.get(cb);\n          if (callback) {\n            let pub = await pubPromises[i];\n            pub.off(type, callback);\n          }\n        });\n      }\n    };\n  }\n  seenOn(id) {\n    return Array.from(this._seenOn[id]?.values?.() || []);\n  }\n};\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  BECH32_REGEX: () => BECH32_REGEX,\n  decode: () => decode,\n  naddrEncode: () => naddrEncode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nrelayEncode: () => nrelayEncode,\n  nsecEncode: () => nsecEncode\n});\nimport { bytesToHex as bytesToHex3, concatBytes, hexToBytes } from \"@noble/hashes/utils\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nvar BECH32_REGEX = /[\\x21-\\x7E]{1,83}1[023456789acdefghjklmnpqrstuvwxyz]{6,}/;\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  switch (prefix) {\n    case \"nprofile\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nprofile\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      return {\n        type: \"nprofile\",\n        data: {\n          pubkey: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nevent\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nevent\");\n      if (tlv[0][0].length !== 32)\n        throw new Error(\"TLV 0 should be 32 bytes\");\n      if (tlv[2] && tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      return {\n        type: \"nevent\",\n        data: {\n          id: bytesToHex3(tlv[0][0]),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : [],\n          author: tlv[2]?.[0] ? bytesToHex3(tlv[2][0]) : void 0\n        }\n      };\n    }\n    case \"naddr\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for naddr\");\n      if (!tlv[2]?.[0])\n        throw new Error(\"missing TLV 2 for naddr\");\n      if (tlv[2][0].length !== 32)\n        throw new Error(\"TLV 2 should be 32 bytes\");\n      if (!tlv[3]?.[0])\n        throw new Error(\"missing TLV 3 for naddr\");\n      if (tlv[3][0].length !== 4)\n        throw new Error(\"TLV 3 should be 4 bytes\");\n      return {\n        type: \"naddr\",\n        data: {\n          identifier: utf8Decoder.decode(tlv[0][0]),\n          pubkey: bytesToHex3(tlv[2][0]),\n          kind: parseInt(bytesToHex3(tlv[3][0]), 16),\n          relays: tlv[1] ? tlv[1].map((d) => utf8Decoder.decode(d)) : []\n        }\n      };\n    }\n    case \"nrelay\": {\n      let tlv = parseTLV(data);\n      if (!tlv[0]?.[0])\n        throw new Error(\"missing TLV 0 for nrelay\");\n      return {\n        type: \"nrelay\",\n        data: utf8Decoder.decode(tlv[0][0])\n      };\n    }\n    case \"nsec\":\n    case \"npub\":\n    case \"note\":\n      return { type: prefix, data: bytesToHex3(data) };\n    default:\n      throw new Error(`unknown prefix ${prefix}`);\n  }\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      continue;\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(hex) {\n  return encodeBytes(\"nsec\", hex);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hex);\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hex);\n}\nfunction encodeBytes(prefix, hex) {\n  let data = hexToBytes(hex);\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nprofile\", words, Bech32MaxSize);\n}\nfunction neventEncode(event) {\n  let data = encodeTLV({\n    0: [hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: event.author ? [hexToBytes(event.author)] : []\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nevent\", words, Bech32MaxSize);\n}\nfunction naddrEncode(addr) {\n  let kind = new ArrayBuffer(4);\n  new DataView(kind).setUint32(0, addr.kind, false);\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(addr.identifier)],\n    1: (addr.relays || []).map((url) => utf8Encoder.encode(url)),\n    2: [hexToBytes(addr.pubkey)],\n    3: [new Uint8Array(kind)]\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"naddr\", words, Bech32MaxSize);\n}\nfunction nrelayEncode(url) {\n  let data = encodeTLV({\n    0: [utf8Encoder.encode(url)]\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nrelay\", words, Bech32MaxSize);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return concatBytes(...entries);\n}\n\n// references.ts\nvar mentionRegex = /\\bnostr:((note|npub|naddr|nevent|nprofile)1\\w+)\\b|#\\[(\\d+)\\]/g;\nfunction parseReferences(evt) {\n  let references = [];\n  for (let ref of evt.content.matchAll(mentionRegex)) {\n    if (ref[2]) {\n      try {\n        let { type, data } = decode(ref[1]);\n        switch (type) {\n          case \"npub\": {\n            references.push({\n              text: ref[0],\n              profile: { pubkey: data, relays: [] }\n            });\n            break;\n          }\n          case \"nprofile\": {\n            references.push({\n              text: ref[0],\n              profile: data\n            });\n            break;\n          }\n          case \"note\": {\n            references.push({\n              text: ref[0],\n              event: { id: data, relays: [] }\n            });\n            break;\n          }\n          case \"nevent\": {\n            references.push({\n              text: ref[0],\n              event: data\n            });\n            break;\n          }\n          case \"naddr\": {\n            references.push({\n              text: ref[0],\n              address: data\n            });\n            break;\n          }\n        }\n      } catch (err) {\n      }\n    } else if (ref[3]) {\n      let idx = parseInt(ref[3], 10);\n      let tag = evt.tags[idx];\n      if (!tag)\n        continue;\n      switch (tag[0]) {\n        case \"p\": {\n          references.push({\n            text: ref[0],\n            profile: { pubkey: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"e\": {\n          references.push({\n            text: ref[0],\n            event: { id: tag[1], relays: tag[2] ? [tag[2]] : [] }\n          });\n          break;\n        }\n        case \"a\": {\n          try {\n            let [kind, pubkey, identifier] = tag[1].split(\":\");\n            references.push({\n              text: ref[0],\n              address: {\n                identifier,\n                pubkey,\n                kind: parseInt(kind, 10),\n                relays: tag[2] ? [tag[2]] : []\n              }\n            });\n          } catch (err) {\n          }\n          break;\n        }\n      }\n    }\n  }\n  return references;\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { randomBytes } from \"@noble/hashes/utils\";\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\nimport { base64 } from \"@scure/base\";\nif (typeof crypto !== \"undefined\" && !crypto.subtle && crypto.webcrypto) {\n  crypto.subtle = crypto.webcrypto.subtle;\n}\nasync function encrypt(privkey, pubkey, text) {\n  const key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"encrypt\"]\n  );\n  let ciphertext = await crypto.subtle.encrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    plaintext\n  );\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(privkey, pubkey, data) {\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k1.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"decrypt\"]\n  );\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    ciphertext\n  );\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  NIP05_REGEX: () => NIP05_REGEX,\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar NIP05_REGEX = /^(?:([\\w.+-]+)@)?([\\w.-]+)$/;\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  const match = fullname.match(NIP05_REGEX);\n  if (!match)\n    return null;\n  const [_, name = \"_\", domain] = match;\n  try {\n    const res = await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`);\n    const { names, relays } = parseNIP05Result(await res.json());\n    const pubkey = names[name];\n    return pubkey ? { pubkey, relays: relays?.[pubkey] } : null;\n  } catch (_e) {\n    return null;\n  }\n}\nfunction parseNIP05Result(json) {\n  const result = {\n    names: {}\n  };\n  for (const [name, pubkey] of Object.entries(json.names)) {\n    if (typeof name === \"string\" && typeof pubkey === \"string\") {\n      result.names[name] = pubkey;\n    }\n  }\n  if (json.relays) {\n    result.relays = {};\n    for (const [pubkey, relays] of Object.entries(json.relays)) {\n      if (typeof pubkey === \"string\" && Array.isArray(relays)) {\n        result.relays[pubkey] = relays.filter((relay) => typeof relay === \"string\");\n      }\n    }\n  }\n  return result;\n}\n\n// nip06.ts\nvar nip06_exports = {};\n__export(nip06_exports, {\n  generateSeedWords: () => generateSeedWords,\n  privateKeyFromSeedWords: () => privateKeyFromSeedWords,\n  validateWords: () => validateWords\n});\nimport { bytesToHex as bytesToHex4 } from \"@noble/hashes/utils\";\nimport { wordlist } from \"@scure/bip39/wordlists/english.js\";\nimport {\n  generateMnemonic,\n  mnemonicToSeedSync,\n  validateMnemonic\n} from \"@scure/bip39\";\nimport { HDKey } from \"@scure/bip32\";\nfunction privateKeyFromSeedWords(mnemonic, passphrase) {\n  let root = HDKey.fromMasterSeed(mnemonicToSeedSync(mnemonic, passphrase));\n  let privateKey = root.derive(`m/44'/1237'/0'/0/0`).privateKey;\n  if (!privateKey)\n    throw new Error(\"could not derive private key\");\n  return bytesToHex4(privateKey);\n}\nfunction generateSeedWords() {\n  return generateMnemonic(wordlist);\n}\nfunction validateWords(words) {\n  return validateMnemonic(words, wordlist);\n}\n\n// nip10.ts\nvar nip10_exports = {};\n__export(nip10_exports, {\n  parse: () => parse\n});\nfunction parse(event) {\n  const result = {\n    reply: void 0,\n    root: void 0,\n    mentions: [],\n    profiles: []\n  };\n  const eTags = [];\n  for (const tag of event.tags) {\n    if (tag[0] === \"e\" && tag[1]) {\n      eTags.push(tag);\n    }\n    if (tag[0] === \"p\" && tag[1]) {\n      result.profiles.push({\n        pubkey: tag[1],\n        relays: tag[2] ? [tag[2]] : []\n      });\n    }\n  }\n  for (let eTagIndex = 0; eTagIndex < eTags.length; eTagIndex++) {\n    const eTag = eTags[eTagIndex];\n    const [_, eTagEventId, eTagRelayUrl, eTagMarker] = eTag;\n    const eventPointer = {\n      id: eTagEventId,\n      relays: eTagRelayUrl ? [eTagRelayUrl] : []\n    };\n    const isFirstETag = eTagIndex === 0;\n    const isLastETag = eTagIndex === eTags.length - 1;\n    if (eTagMarker === \"root\") {\n      result.root = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"reply\") {\n      result.reply = eventPointer;\n      continue;\n    }\n    if (eTagMarker === \"mention\") {\n      result.mentions.push(eventPointer);\n      continue;\n    }\n    if (isFirstETag) {\n      result.root = eventPointer;\n      continue;\n    }\n    if (isLastETag) {\n      result.reply = eventPointer;\n      continue;\n    }\n    result.mentions.push(eventPointer);\n  }\n  return result;\n}\n\n// nip13.ts\nvar nip13_exports = {};\n__export(nip13_exports, {\n  getPow: () => getPow\n});\nimport { hexToBytes as hexToBytes2 } from \"@noble/hashes/utils\";\nfunction getPow(id) {\n  return getLeadingZeroBits(hexToBytes2(id));\n}\nfunction getLeadingZeroBits(hash) {\n  let total, i, bits;\n  for (i = 0, total = 0; i < hash.length; i++) {\n    bits = msb(hash[i]);\n    total += bits;\n    if (bits !== 8) {\n      break;\n    }\n  }\n  return total;\n}\nfunction msb(b) {\n  let n = 0;\n  if (b === 0) {\n    return 8;\n  }\n  while (b >>= 1) {\n    n++;\n  }\n  return 7 - n;\n}\n\n// nip18.ts\nvar nip18_exports = {};\n__export(nip18_exports, {\n  finishRepostEvent: () => finishRepostEvent,\n  getRepostedEvent: () => getRepostedEvent,\n  getRepostedEventPointer: () => getRepostedEventPointer\n});\nfunction finishRepostEvent(t, reposted, relayUrl, privateKey) {\n  return finishEvent({\n    kind: 6 /* Repost */,\n    tags: [\n      ...t.tags ?? [],\n      [\"e\", reposted.id, relayUrl],\n      [\"p\", reposted.pubkey]\n    ],\n    content: t.content === \"\" ? \"\" : JSON.stringify(reposted),\n    created_at: t.created_at\n  }, privateKey);\n}\nfunction getRepostedEventPointer(event) {\n  if (event.kind !== 6 /* Repost */) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i = event.tags.length - 1; i >= 0 && (lastETag === void 0 || lastPTag === void 0); i--) {\n    const tag = event.tags[i];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag?.[2]].filter((x) => typeof x === \"string\"),\n    author: lastPTag?.[1]\n  };\n}\nfunction getRepostedEvent(event, { skipVerification } = {}) {\n  const pointer = getRepostedEventPointer(event);\n  if (pointer === void 0 || event.content === \"\") {\n    return void 0;\n  }\n  let repostedEvent;\n  try {\n    repostedEvent = JSON.parse(event.content);\n  } catch (error) {\n    return void 0;\n  }\n  if (repostedEvent.id !== pointer.id) {\n    return void 0;\n  }\n  if (!skipVerification && !verifySignature(repostedEvent)) {\n    return void 0;\n  }\n  return repostedEvent;\n}\n\n// nip21.ts\nvar nip21_exports = {};\n__export(nip21_exports, {\n  NOSTR_URI_REGEX: () => NOSTR_URI_REGEX,\n  parse: () => parse2,\n  test: () => test\n});\nvar NOSTR_URI_REGEX = new RegExp(`nostr:(${BECH32_REGEX.source})`);\nfunction test(value) {\n  return typeof value === \"string\" && new RegExp(`^${NOSTR_URI_REGEX.source}$`).test(value);\n}\nfunction parse2(uri) {\n  const match = uri.match(new RegExp(`^${NOSTR_URI_REGEX.source}$`));\n  if (!match)\n    throw new Error(`Invalid Nostr URI: ${uri}`);\n  return {\n    uri: match[0],\n    value: match[1],\n    decoded: decode(match[1])\n  };\n}\n\n// nip25.ts\nvar nip25_exports = {};\n__export(nip25_exports, {\n  finishReactionEvent: () => finishReactionEvent,\n  getReactedEventPointer: () => getReactedEventPointer\n});\nfunction finishReactionEvent(t, reacted, privateKey) {\n  const inheritedTags = reacted.tags.filter(\n    (tag) => tag.length >= 2 && (tag[0] === \"e\" || tag[0] === \"p\")\n  );\n  return finishEvent({\n    ...t,\n    kind: 7 /* Reaction */,\n    tags: [\n      ...t.tags ?? [],\n      ...inheritedTags,\n      [\"e\", reacted.id],\n      [\"p\", reacted.pubkey]\n    ],\n    content: t.content ?? \"+\"\n  }, privateKey);\n}\nfunction getReactedEventPointer(event) {\n  if (event.kind !== 7 /* Reaction */) {\n    return void 0;\n  }\n  let lastETag;\n  let lastPTag;\n  for (let i = event.tags.length - 1; i >= 0 && (lastETag === void 0 || lastPTag === void 0); i--) {\n    const tag = event.tags[i];\n    if (tag.length >= 2) {\n      if (tag[0] === \"e\" && lastETag === void 0) {\n        lastETag = tag;\n      } else if (tag[0] === \"p\" && lastPTag === void 0) {\n        lastPTag = tag;\n      }\n    }\n  }\n  if (lastETag === void 0 || lastPTag === void 0) {\n    return void 0;\n  }\n  return {\n    id: lastETag[1],\n    relays: [lastETag[2], lastPTag[2]].filter((x) => x !== void 0),\n    author: lastPTag[1]\n  };\n}\n\n// nip26.ts\nvar nip26_exports = {};\n__export(nip26_exports, {\n  createDelegation: () => createDelegation,\n  getDelegator: () => getDelegator\n});\nimport { schnorr as schnorr3 } from \"@noble/curves/secp256k1\";\nimport { bytesToHex as bytesToHex5 } from \"@noble/hashes/utils\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction createDelegation(privateKey, parameters) {\n  let conditions = [];\n  if ((parameters.kind || -1) >= 0)\n    conditions.push(`kind=${parameters.kind}`);\n  if (parameters.until)\n    conditions.push(`created_at<${parameters.until}`);\n  if (parameters.since)\n    conditions.push(`created_at>${parameters.since}`);\n  let cond = conditions.join(\"&\");\n  if (cond === \"\")\n    throw new Error(\"refusing to create a delegation without any conditions\");\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${parameters.pubkey}:${cond}`)\n  );\n  let sig = bytesToHex5(\n    schnorr3.sign(sighash, privateKey)\n  );\n  return {\n    from: getPublicKey(privateKey),\n    to: parameters.pubkey,\n    cond,\n    sig\n  };\n}\nfunction getDelegator(event) {\n  let tag = event.tags.find((tag2) => tag2[0] === \"delegation\" && tag2.length >= 4);\n  if (!tag)\n    return null;\n  let pubkey = tag[1];\n  let cond = tag[2];\n  let sig = tag[3];\n  let conditions = cond.split(\"&\");\n  for (let i = 0; i < conditions.length; i++) {\n    let [key, operator, value] = conditions[i].split(/\\b/);\n    if (key === \"kind\" && operator === \"=\" && event.kind === parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \"<\" && event.created_at < parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \">\" && event.created_at > parseInt(value))\n      continue;\n    else\n      return null;\n  }\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${event.pubkey}:${cond}`)\n  );\n  if (!schnorr3.verify(sig, sighash, pubkey))\n    return null;\n  return pubkey;\n}\n\n// nip27.ts\nvar nip27_exports = {};\n__export(nip27_exports, {\n  matchAll: () => matchAll,\n  regex: () => regex,\n  replaceAll: () => replaceAll\n});\nvar regex = () => new RegExp(`\\\\b${NOSTR_URI_REGEX.source}\\\\b`, \"g\");\nfunction* matchAll(content) {\n  const matches = content.matchAll(regex());\n  for (const match of matches) {\n    const [uri, value] = match;\n    yield {\n      uri,\n      value,\n      decoded: decode(value),\n      start: match.index,\n      end: match.index + uri.length\n    };\n  }\n}\nfunction replaceAll(content, replacer) {\n  return content.replaceAll(regex(), (uri, value) => {\n    return replacer({\n      uri,\n      value,\n      decoded: decode(value)\n    });\n  });\n}\n\n// nip39.ts\nvar nip39_exports = {};\n__export(nip39_exports, {\n  useFetchImplementation: () => useFetchImplementation2,\n  validateGithub: () => validateGithub\n});\nvar _fetch2;\ntry {\n  _fetch2 = fetch;\n} catch {\n}\nfunction useFetchImplementation2(fetchImplementation) {\n  _fetch2 = fetchImplementation;\n}\nasync function validateGithub(pubkey, username, proof) {\n  try {\n    let res = await (await _fetch2(`https://gist.github.com/${username}/${proof}/raw`)).text();\n    return res === `Verifying that I control the following Nostr public key: ${pubkey}`;\n  } catch (_) {\n    return false;\n  }\n}\n\n// nip42.ts\nvar nip42_exports = {};\n__export(nip42_exports, {\n  authenticate: () => authenticate\n});\nvar authenticate = async ({\n  challenge,\n  relay,\n  sign\n}) => {\n  const e = {\n    kind: 22242 /* ClientAuth */,\n    created_at: Math.floor(Date.now() / 1e3),\n    tags: [\n      [\"relay\", relay.url],\n      [\"challenge\", challenge]\n    ],\n    content: \"\"\n  };\n  const pub = relay.auth(await sign(e));\n  return new Promise((resolve, reject) => {\n    pub.on(\"ok\", function ok() {\n      pub.off(\"ok\", ok);\n      resolve();\n    });\n    pub.on(\"failed\", function fail(reason) {\n      pub.off(\"failed\", fail);\n      reject(reason);\n    });\n  });\n};\n\n// nip57.ts\nvar nip57_exports = {};\n__export(nip57_exports, {\n  getZapEndpoint: () => getZapEndpoint,\n  makeZapReceipt: () => makeZapReceipt,\n  makeZapRequest: () => makeZapRequest,\n  useFetchImplementation: () => useFetchImplementation3,\n  validateZapRequest: () => validateZapRequest\n});\nimport { bech32 as bech322 } from \"@scure/base\";\nvar _fetch3;\ntry {\n  _fetch3 = fetch;\n} catch {\n}\nfunction useFetchImplementation3(fetchImplementation) {\n  _fetch3 = fetchImplementation;\n}\nasync function getZapEndpoint(metadata) {\n  try {\n    let lnurl = \"\";\n    let { lud06, lud16 } = JSON.parse(metadata.content);\n    if (lud06) {\n      let { words } = bech322.decode(lud06, 1e3);\n      let data = bech322.fromWords(words);\n      lnurl = utf8Decoder.decode(data);\n    } else if (lud16) {\n      let [name, domain] = lud16.split(\"@\");\n      lnurl = `https://${domain}/.well-known/lnurlp/${name}`;\n    } else {\n      return null;\n    }\n    let res = await _fetch3(lnurl);\n    let body = await res.json();\n    if (body.allowsNostr && body.nostrPubkey) {\n      return body.callback;\n    }\n  } catch (err) {\n  }\n  return null;\n}\nfunction makeZapRequest({\n  profile,\n  event,\n  amount,\n  relays,\n  comment = \"\"\n}) {\n  if (!amount)\n    throw new Error(\"amount not given\");\n  if (!profile)\n    throw new Error(\"profile not given\");\n  let zr = {\n    kind: 9734,\n    created_at: Math.round(Date.now() / 1e3),\n    content: comment,\n    tags: [\n      [\"p\", profile],\n      [\"amount\", amount.toString()],\n      [\"relays\", ...relays]\n    ]\n  };\n  if (event) {\n    zr.tags.push([\"e\", event]);\n  }\n  return zr;\n}\nfunction validateZapRequest(zapRequestString) {\n  let zapRequest;\n  try {\n    zapRequest = JSON.parse(zapRequestString);\n  } catch (err) {\n    return \"Invalid zap request JSON.\";\n  }\n  if (!validateEvent(zapRequest))\n    return \"Zap request is not a valid Nostr event.\";\n  if (!verifySignature(zapRequest))\n    return \"Invalid signature on zap request.\";\n  let p = zapRequest.tags.find(([t, v]) => t === \"p\" && v);\n  if (!p)\n    return \"Zap request doesn't have a 'p' tag.\";\n  if (!p[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'p' tag is not valid hex.\";\n  let e = zapRequest.tags.find(([t, v]) => t === \"e\" && v);\n  if (e && !e[1].match(/^[a-f0-9]{64}$/))\n    return \"Zap request 'e' tag is not valid hex.\";\n  let relays = zapRequest.tags.find(([t, v]) => t === \"relays\" && v);\n  if (!relays)\n    return \"Zap request doesn't have a 'relays' tag.\";\n  return null;\n}\nfunction makeZapReceipt({\n  zapRequest,\n  preimage,\n  bolt11,\n  paidAt\n}) {\n  let zr = JSON.parse(zapRequest);\n  let tagsFromZapRequest = zr.tags.filter(\n    ([t]) => t === \"e\" || t === \"p\" || t === \"a\"\n  );\n  let zap = {\n    kind: 9735,\n    created_at: Math.round(paidAt.getTime() / 1e3),\n    content: \"\",\n    tags: [\n      ...tagsFromZapRequest,\n      [\"bolt11\", bolt11],\n      [\"description\", zapRequest]\n    ]\n  };\n  if (preimage) {\n    zap.tags.push([\"preimage\", preimage]);\n  }\n  return zap;\n}\nexport {\n  Kind,\n  SimplePool,\n  finishEvent,\n  fakejson_exports as fj,\n  generatePrivateKey,\n  getBlankEvent,\n  getEventHash,\n  getPublicKey,\n  getSignature,\n  matchFilter,\n  matchFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip06_exports as nip06,\n  nip10_exports as nip10,\n  nip13_exports as nip13,\n  nip18_exports as nip18,\n  nip19_exports as nip19,\n  nip21_exports as nip21,\n  nip25_exports as nip25,\n  nip26_exports as nip26,\n  nip27_exports as nip27,\n  nip39_exports as nip39,\n  nip42_exports as nip42,\n  nip57_exports as nip57,\n  parseReferences,\n  relayInit,\n  serializeEvent,\n  signEvent,\n  utils_exports as utils,\n  validateEvent,\n  verifySignature\n};\n","/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { secp256k1 as secp } from '@noble/curves/secp256k1';\nimport { mod } from '@noble/curves/abstract/modular';\nimport { base58check as base58checker } from '@scure/base';\n\nconst Point = secp.ProjectivePoint;\nconst base58check = base58checker(sha256);\n\nfunction bytesToNumber(bytes: Uint8Array): bigint {\n  return BigInt(`0x${bytesToHex(bytes)}`);\n}\n\nfunction numberToBytes(num: bigint): Uint8Array {\n  return hexToBytes(num.toString(16).padStart(64, '0'));\n}\n\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\n// Bitcoin hardcoded by default\nconst BITCOIN_VERSIONS: Versions = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET: number = 0x80000000;\n\nexport interface Versions {\n  private: number;\n  public: number;\n}\n\nconst hash160 = (data: Uint8Array) => ripemd160(sha256(data));\nconst fromU32 = (data: Uint8Array) => createView(data).getUint32(0, false);\nconst toU32 = (n: number) => {\n  if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n    throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n  }\n  const buf = new Uint8Array(4);\n  createView(buf).setUint32(0, n, false);\n  return buf;\n};\n\ninterface HDKeyOpt {\n  versions: Versions;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: number;\n  chainCode: Uint8Array;\n  publicKey?: Uint8Array;\n  privateKey?: Uint8Array | bigint;\n}\n\nexport class HDKey {\n  get fingerprint(): number {\n    if (!this.pubHash) {\n      throw new Error('No publicKey set!');\n    }\n    return fromU32(this.pubHash);\n  }\n  get identifier(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get pubKeyHash(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get privateKey(): Uint8Array | null {\n    return this.privKeyBytes || null;\n  }\n  get publicKey(): Uint8Array | null {\n    return this.pubKey || null;\n  }\n  get privateExtendedKey(): string {\n    const priv = this.privateKey;\n    if (!priv) {\n      throw new Error('No private key');\n    }\n    return base58check.encode(\n      this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv))\n    );\n  }\n  get publicExtendedKey(): string {\n    if (!this.pubKey) {\n      throw new Error('No public key');\n    }\n    return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n  }\n\n  public static fromMasterSeed(seed: Uint8Array, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    assertBytes(seed);\n    if (8 * seed.length < 128 || 8 * seed.length > 512) {\n      throw new Error(\n        `HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`\n      );\n    }\n    const I = hmac(sha512, MASTER_SECRET, seed);\n    return new HDKey({\n      versions,\n      chainCode: I.slice(32),\n      privateKey: I.slice(0, 32),\n    });\n  }\n\n  public static fromExtendedKey(base58key: string, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    const keyBuffer: Uint8Array = base58check.decode(base58key);\n    const keyView = createView(keyBuffer);\n    const version = keyView.getUint32(0, false);\n    const opt = {\n      versions,\n      depth: keyBuffer[4],\n      parentFingerprint: keyView.getUint32(5, false),\n      index: keyView.getUint32(9, false),\n      chainCode: keyBuffer.slice(13, 45),\n    };\n    const key = keyBuffer.slice(45);\n    const isPriv = key[0] === 0;\n    if (version !== versions[isPriv ? 'private' : 'public']) {\n      throw new Error('Version mismatch');\n    }\n    if (isPriv) {\n      return new HDKey({ ...opt, privateKey: key.slice(1) });\n    } else {\n      return new HDKey({ ...opt, publicKey: key });\n    }\n  }\n\n  public static fromJSON(json: { xpriv: string }): HDKey {\n    return HDKey.fromExtendedKey(json.xpriv);\n  }\n  public readonly versions: Versions;\n  public readonly depth: number = 0;\n  public readonly index: number = 0;\n  public readonly chainCode: Uint8Array | null = null;\n  public readonly parentFingerprint: number = 0;\n  private privKey?: bigint;\n  private privKeyBytes?: Uint8Array;\n  private pubKey?: Uint8Array;\n  private pubHash: Uint8Array | undefined;\n\n  constructor(opt: HDKeyOpt) {\n    if (!opt || typeof opt !== 'object') {\n      throw new Error('HDKey.constructor must not be called directly');\n    }\n    this.versions = opt.versions || BITCOIN_VERSIONS;\n    this.depth = opt.depth || 0;\n    this.chainCode = opt.chainCode;\n    this.index = opt.index || 0;\n    this.parentFingerprint = opt.parentFingerprint || 0;\n    if (!this.depth) {\n      if (this.parentFingerprint || this.index) {\n        throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n      }\n    }\n    if (opt.publicKey && opt.privateKey) {\n      throw new Error('HDKey: publicKey and privateKey at same time.');\n    }\n    if (opt.privateKey) {\n      if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n        throw new Error('Invalid private key');\n      }\n      this.privKey =\n        typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n      this.privKeyBytes = numberToBytes(this.privKey);\n      this.pubKey = secp.getPublicKey(opt.privateKey, true);\n    } else if (opt.publicKey) {\n      this.pubKey = Point.fromHex(opt.publicKey).toRawBytes(true); // force compressed point\n    } else {\n      throw new Error('HDKey: no public or private key provided');\n    }\n    this.pubHash = hash160(this.pubKey);\n  }\n\n  public derive(path: string): HDKey {\n    if (!/^[mM]'?/.test(path)) {\n      throw new Error('Path must start with \"m\" or \"M\"');\n    }\n    if (/^[mM]'?$/.test(path)) {\n      return this;\n    }\n    const parts = path.replace(/^[mM]'?\\//, '').split('/');\n    // tslint:disable-next-line\n    let child: HDKey = this;\n    for (const c of parts) {\n      const m = /^(\\d+)('?)$/.exec(c);\n      if (!m || m.length !== 3) {\n        throw new Error(`Invalid child index: ${c}`);\n      }\n      let idx = +m[1];\n      if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n        throw new Error('Invalid index');\n      }\n      // hardened key\n      if (m[2] === \"'\") {\n        idx += HARDENED_OFFSET;\n      }\n      child = child.deriveChild(idx);\n    }\n    return child;\n  }\n\n  public deriveChild(index: number): HDKey {\n    if (!this.pubKey || !this.chainCode) {\n      throw new Error('No publicKey or chainCode set');\n    }\n    let data = toU32(index);\n    if (index >= HARDENED_OFFSET) {\n      // Hardened\n      const priv = this.privateKey;\n      if (!priv) {\n        throw new Error('Could not derive hardened child key');\n      }\n      // Hardened child: 0x00 || ser256(kpar) || ser32(index)\n      data = concatBytes(new Uint8Array([0]), priv, data);\n    } else {\n      // Normal child: serP(point(kpar)) || ser32(index)\n      data = concatBytes(this.pubKey, data);\n    }\n    const I = hmac(sha512, this.chainCode, data);\n    const childTweak = bytesToNumber(I.slice(0, 32));\n    const chainCode = I.slice(32);\n    if (!secp.utils.isValidPrivateKey(childTweak)) {\n      throw new Error('Tweak bigger than curve order');\n    }\n    const opt: HDKeyOpt = {\n      versions: this.versions,\n      chainCode,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n      index,\n    };\n    try {\n      // Private parent key -> private child key\n      if (this.privateKey) {\n        const added = mod(this.privKey! + childTweak, secp.CURVE.n);\n        if (!secp.utils.isValidPrivateKey(added)) {\n          throw new Error('The tweak was out of range or the resulted private key is invalid');\n        }\n        opt.privateKey = added;\n      } else {\n        const added = Point.fromHex(this.pubKey).add(Point.fromPrivateKey(childTweak));\n        // Cryptographically impossible: hmac-sha512 preimage would need to be found\n        if (added.equals(Point.ZERO)) {\n          throw new Error('The tweak was equal to negative P, which made the result key invalid');\n        }\n        opt.publicKey = added.toRawBytes(true);\n      }\n      return new HDKey(opt);\n    } catch (err) {\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  public sign(hash: Uint8Array): Uint8Array {\n    if (!this.privateKey) {\n      throw new Error('No privateKey set!');\n    }\n    assertBytes(hash, 32);\n    return secp.sign(hash, this.privKey!).toCompactRawBytes();\n  }\n\n  public verify(hash: Uint8Array, signature: Uint8Array): boolean {\n    assertBytes(hash, 32);\n    assertBytes(signature, 64);\n    if (!this.publicKey) {\n      throw new Error('No publicKey set!');\n    }\n    let sig;\n    try {\n      sig = secp.Signature.fromCompact(signature);\n    } catch (error) {\n      return false;\n    }\n    return secp.verify(sig, hash, this.publicKey);\n  }\n\n  public wipePrivateData(): this {\n    this.privKey = undefined;\n    if (this.privKeyBytes) {\n      this.privKeyBytes.fill(0);\n      this.privKeyBytes = undefined;\n    }\n    return this;\n  }\n  public toJSON(): { xpriv: string; xpub: string } {\n    return {\n      xpriv: this.privateExtendedKey,\n      xpub: this.publicExtendedKey,\n    };\n  }\n\n  private serialize(version: number, key: Uint8Array) {\n    if (!this.chainCode) {\n      throw new Error('No chainCode set');\n    }\n    assertBytes(key, 33);\n    // version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    return concatBytes(\n      toU32(version),\n      new Uint8Array([this.depth]),\n      toU32(this.parentFingerprint),\n      toU32(this.index),\n      this.chainCode,\n      key\n    );\n  }\n}\n"],"names":["number","n","Number","isSafeInteger","Error","bool","b","bytes","Uint8Array","TypeError","_len","arguments","length","lengths","Array","_key","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","undefined","destroyed","finished","output","out","min","exports","assert","_assert_js_1","require","utils_js_1","SHA2","Hash","constructor","padOffset","isLE","super","pos","this","buffer","view","createView","update","data","default","len","toBytes","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","U32_MASK64","fromBig","split","lst","le","Ah","Uint32Array","Al","toBig","add","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","globalThis","crypto","HMAC","key","iHash","pad","oHash","buf","Object","getPrototypeOf","hmac","message","hmac_js_1","pbkdf2Init","_password","_salt","_opts","opts","checkOpts","dkLen","asyncTick","c","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","arr","ti","Ti","setInt32","ui","async","asyncLoop","_sha2_js_1","Maj","a","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","Chi","SHA224","wrapConstructor","_u64_js_1","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","crypto_1","byteLength","floor","DataView","word","shift","hexes","from","v","toString","padStart","uint8a","hex","array","j","hexByte","byte","parseInt","isNaN","utf8ToBytes","str","TextEncoder","encode","iters","tick","cb","ts","Date","now","diff","nextTick","arrays","every","reduce","result","clone","defaults","obj","prototype","call","assign","hashConstructor","hashC","tmp","hashCons","msg","bytesLength","getRandomValues","assertNumber","chain","wrap","args","reverse","acc","decode","alphabet","digits","isArray","input","letter","index","indexOf","join","separator","padding","bits","chr","push","end","normalize","fn","convertRadix","forEach","d","carry","done","digit","digitBase","defineProperty","stringToBytes","bytesToString","utf8","bech32m","bech32","base58check","base58xmr","base58xrp","base58flickr","base58","base64url","base64","base32crockford","base32hex","base32","base16","utils","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","_len2","_key2","apply","e","checksum","payload","newChecksum","oldChecksum","toUpperCase","replace","genBase58","abc","XMR_BLOCK_LEN","block","concat","sha256","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","charCodeAt","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","CODERS","coderTypeError","keys","type","hasOwnProperty","_assert_1","pbkdf2_1","sha256_1","sha512_1","utils_1","base_1","isJapanese","wordlist","nfkd","norm","assertEntropy","entropy","strength","entropyToMnemonic","randomBytes","calcChecksum","bitsLeft","getCoder","mnemonicToEntropy","mnemonic","passphrase","pbkdf2","sha512","getHash","msgs","concatBytes","createCurve","curveDef","defHash","weierstrass","freeze","_0n","_1n","wNAF","constTimeNegate","condition","item","neg","negate","W","windows","ceil","windowSize","unsafeLadder","elm","p","ZERO","double","precomputeWindow","points","base","window","precomputes","f","BASE","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","wNAFCached","P","precomputesMap","transform","_WINDOW_SIZE","comp","validateBasic","curve","validateField","Fp","validateObject","Gx","Gy","nBitLength","nByteLength","nLength","ORDER","os2ip","bytesToNumberBE","i2osp","strxor","isBytes","isNum","hash_to_field","count","options","DST","m","k","expand","_DST","dst","validateDST","log2p","L","len_in_bytes","prb","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xmd","expand_message_xof","elm_offset","tv","mod","isogenyMap","field","COEFF","x","y","xNum","xDen","yNum","yDen","val","mul","div","createHasher","Point","mapToCurve","def","hashToCurve","u0","fromAffine","u1","clearCofactor","assertValidity","encodeToCurve","encodeDST","_2n","_3n","_4n","_5n","_8n","pow","power","modulo","pow2","invert","q","r","FpSqrt","p1div4","root","eql","sqr","c1","n2","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","g","t2","ge","tonelliShanks","FIELD_FIELDS","MASK","BYTES","BITS","_nBitLength","Field","bitLen","redef","sqrtP","bitMask","isValid","is0","isOdd","lhs","rhs","FpPow","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","nums","lastMultiplied","inverted","reduceRight","FpInvertBatch","cmov","numberToBytesLE","numberToBytesBE","fromBytes","bytesToNumberLE","hashToPrivateScalar","groupOrder","hashLen","ensureBytes","minLen","u8a","bytesToHex","numberToHexUnpadded","hexToNumber","hexToBytes","numberToVarBytesBE","title","expectedLength","arrs","equalBytes","b1","b2","bitGet","bitSet","u8n","u8fr","createHmacDrbg","qByteLen","hmacFn","reset","reseed","seed","gen","sl","genUntil","pred","validatorFns","bigint","function","boolean","string","object","validators","optValidators","checkField","fieldName","isOptional","checkVal","String","entries","b2n","h2b","ut","DER","Err","_parseInt","toSig","sBytes","rBytesLeft","hexFromSig","sig","shl","rhl","rl","weierstrassPoints","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","point","isCompressed","toAffine","tail","weierstrassEquation","x2","x3","isWithinCurveOrder","assertGE","normPrivateKeyToScalar","error","pointPrecomputes","Map","assertPrjPoint","other","px","py","pz","static","toInv","privateKey","multiply","_setWindowSize","delete","left","right","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wnaf","multiplyUnsafe","I","k1neg","k1","k2neg","k2","k1p","k2p","scalar","fake","f1p","f2p","normalizeZ","multiplyAndAddUnsafe","iz","z","ax","ay","zz","cofactor","toRawBytes","toHex","_bits","ProjectivePoint","bits2int","bits2int_modN","lowS","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","R","fromHex","ir","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","isValidPrivateKey","randomPrivateKey","rand","precompute","isProbPub","delta","ORDER_MASK","int2octets","prepSig","defaultSigOpts","some","prehash","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","normS","defaultVerOpts","getPublicKey","fromPrivateKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","verify","signature","publicKey","sg","_sig","fromDER","derError","fromCompact","is","mapToCurveSimpleSWU","sqrtRatio","o","c2","c3","c4","c5","c6","c7","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","SWUFpSqrtRatio","tv6","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b6","b9","b11","b22","b44","b88","b176","b220","b223","secp256k1","a1","a2","POW_2_128","fe","TAGGED_HASH_PREFIXES","taggedHash","tag","tagP","tagH","messages","pointToBytes","numTo32b","modP","GmulAdd","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrVerify","pub","schnorr","auxRand","t","k_","rx","isoMap","htf","mapSWU","scalars","Rho","Id","_","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rr","sr","tl","tr","ripemd160","proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","transferHandlers","canHandle","serialize","port1","port2","MessageChannel","expose","deserialize","port","start","createProxy","target","_ref","serialized","isError","name","stack","ep","allowedOrigins","addEventListener","callback","ev","origin","allowedOrigin","RegExp","test","isAllowedOrigin","console","warn","id","path","argumentList","fromWireValue","returnValue","parent","prop","rawValue","proxy","transfers","transferCache","transfer","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","isMessagePort","close","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","isProxyReleased","Proxy","_target","unregister","unregisterProxy","bind","_thisArg","rawArgumentList","last","processArguments","construct","register","registerProxy","processed","handler","serializedValue","random","MAX_SAFE_INTEGER","__defProp","__export","all","enumerable","insertEventIntoAscendingList","insertEventIntoDescendingList","normalizeURL","utf8Decoder","utf8Encoder","url","URL","pathname","protocol","searchParams","sort","sortedArray","event","midPoint","position","created_at","finishEvent","pubkey","getEventHash","getSignature","eventHash","evt","validateEvent","JSON","stringify","kind","tags","content","serializeEvent","bytesToHex2","isRecord","match","verifySignature","schnorr2","err","matchFilter","filter","ids","startsWith","kinds","authors","values","find","since","until","getHex64","json","getInt","sliced","getSubscriptionId","pstart","pend","matchEventId","matchEventPubkey","matchEventKind","relayInit","listTimeout","getTimeout","countTimeout","ws","connectionPromise","openSubs","listeners","connect","disconnect","notice","auth","subListeners","pubListeners","connectRelay","reject","WebSocket","onopen","onerror","onclose","handleNextInterval","incomingMessageQueue","handleNext","clearInterval","subid","so","alreadyHaveEvent","parse","id2","skipVerification","filters","matchFilters","eose","ok","reason","failed","onmessage","setInterval","connected","readyState","trySend","params","setTimeout","send","log","verb","newFilters","newOpts","unsub","on","off","listeners2","splice","_publishEvent","type2","list","events","timeout","clearTimeout","publish","OPEN","status","SimplePool","_conn","_seenOn","eoseSubTimeout","relays","relay","nm","_knownIds","Set","modifiedOpts","has","subs","eventListeners","eoseListeners","eosesMissing","eoseSent","eoseTimeout","ensureRelay","handleEose","greaterSub","filters2","opts2","pubPromises","callbackMap","seenOn","BECH32_REGEX","naddrEncode","neventEncode","noteEncode","nprofileEncode","npubEncode","nrelayEncode","nsecEncode","Bech32MaxSize","nip19","tlv","parseTLV","bytesToHex3","author","identifier","rest","encodeBytes","profile","encodeTLV","addr","ArrayBuffer","_ref2","vs","entry","encrypt","privkey","text","normalizedKey","getNormalizedX","iv","plaintext","cryptoKey","subtle","importKey","ciphertext","decrypt","ctb64","ivb64","webcrypto","NIP05_REGEX","queryProfile","searchDomain","useFetchImplementation","_fetch","fetch","fetchImplementation","domain","query","names","fullname","parseNIP05Result","_e","privateKeyFromSeedWords","HDKey","mnemonicToSeedSync","derive","bytesToHex4","generateSeedWords","generateMnemonic","validateWords","validateMnemonic","reply","mentions","profiles","eTags","eTagIndex","eTag","eTagEventId","eTagRelayUrl","eTagMarker","eventPointer","isFirstETag","isLastETag","getPow","total","msb","getLeadingZeroBits","hexToBytes2","finishRepostEvent","reposted","relayUrl","getRepostedEventPointer","lastETag","lastPTag","getRepostedEvent","pointer","repostedEvent","NOSTR_URI_REGEX","parse2","source","uri","decoded","finishReactionEvent","reacted","inheritedTags","getReactedEventPointer","createDelegation","parameters","conditions","cond","sighash","sha2562","bytesToHex5","schnorr3","getDelegator","tag2","operator","matchAll","regex","replaceAll","matches","replacer","_fetch2","useFetchImplementation2","validateGithub","username","proof","authenticate","_fetch3","_ref3","fail","getZapEndpoint","makeZapReceipt","makeZapRequest","useFetchImplementation3","validateZapRequest","metadata","lnurl","lud06","lud16","bech322","body","allowsNostr","nostrPubkey","_ref4","amount","comment","zr","round","zapRequestString","zapRequest","_ref5","_ref6","_ref7","_ref8","preimage","bolt11","paidAt","tagsFromZapRequest","_ref9","zap","getTime","secp","base58checker","bytesToNumber","MASTER_SECRET","BITCOIN_VERSIONS","private","public","HARDENED_OFFSET","toU32","fingerprint","pubHash","pubKeyHash","privKeyBytes","pubKey","privateExtendedKey","versions","publicExtendedKey","assertBytes","chainCode","base58key","keyBuffer","keyView","version","opt","depth","parentFingerprint","isPriv","fromExtendedKey","xpriv","parts","child","exec","deriveChild","childTweak","added","wipePrivateData","toJSON","xpub"],"sourceRoot":""}