"use strict";(globalThis.webpackChunknostr_chat=globalThis.webpackChunknostr_chat||[]).push([[333],{333:(t,i,e)=>{e.r(i),e.d(i,{HapticsWeb:()=>r});var a=e(6653),n=e(8186);class r extends a.Uw{constructor(){super(...arguments),this.selectionStarted=!1}async impact(t){const i=this.patternForImpact(null===t||void 0===t?void 0:t.style);this.vibrateWithPattern(i)}async notification(t){const i=this.patternForNotification(null===t||void 0===t?void 0:t.type);this.vibrateWithPattern(i)}async vibrate(t){const i=(null===t||void 0===t?void 0:t.duration)||300;this.vibrateWithPattern([i])}async selectionStart(){this.selectionStarted=!0}async selectionChanged(){this.selectionStarted&&this.vibrateWithPattern([70])}async selectionEnd(){this.selectionStarted=!1}patternForImpact(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.y$.Heavy;return t===n.y$.Medium?[43]:t===n.y$.Light?[20]:[61]}patternForNotification(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.k$.Success;return t===n.k$.Warning?[30,40,30,50,60]:t===n.k$.Error?[27,45,50]:[35,65,21]}vibrateWithPattern(t){if(!navigator.vibrate)throw this.unavailable("Browser does not support the vibrate API");navigator.vibrate(t)}}}}]);
//# sourceMappingURL=333.98f5fd62.chunk.js.map